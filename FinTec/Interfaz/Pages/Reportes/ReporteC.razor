@page "/home/{Id:int}/{Correo}/ReporteC"
@inject NavigationManager NavigationManager;
@using BussinesLogic
@using Domain
@inject UsuarioLogic UsuarioLogic;
@inject EspacioLogic EspacioLogic;
@inject Persistencia Persistencia;

<PageTitle>FinTrac Reportes</PageTitle>
<TituloRosado Titulo="Listado de Gastos por Categoria" Subtitulo=""></TituloRosado>

<div class="mt-4">
	<div style="flex-grow: 1; padding-bottom:15px" class="flex flex-col space-y-2">
		<label for="categorySelector" class="text-sm font-medium text-gray-500">Seleccione una Categoria:</label>
		<select @bind="catElegida" id="accontSelector" name="mes">
			<option value="" selected>Seleccione una Opcion</option>
			@foreach (Categoria categoria in categorias)
			{
				@if (categoria.EstadoActivo)
				{
					<option value="@categoria.Nombre">@categoria.Nombre - @categoria.Tipo</option>
				}
			}
		</select>
	</div>

	<h1>@catElegida</h1>

	<div style="display:flex; flex-direction:row">
		<div style="flex-grow: 1; padding-bottom:15px; justify-content:flex-start" class="flex flex-col space-y-2">
			<label for="dateSelector" class="text-sm font-medium text-gray-500">Seleccione una Fecha Inicial:</label>
			<input id="dateSelector" type="date" @bind="fechaInicio" style="width: 40%; position:relative;" />
		</div>
		<div style="flex-grow: 1; padding-bottom:15px; justify-content:flex-end; right:0%;" class="flex flex-col space-y-2">
			<label for="dateSelector" class="text-sm font-medium text-gray-500">Seleccione una Fecha Final:</label>
			<input id="dateSelector" type="date" @bind="fechaFin" style="width: 40%; position:relative;" />
		</div>
	</div>

	<div style="flex-grow: 1; padding-bottom:15px" class="flex flex-col space-y-2">
		<label for="accountSelector" class="text-sm font-medium text-gray-500">Seleccione una Cuenta:</label>
		<select @bind="cuentaElegida" id="accontSelector" name="mes">
			<option value="" selected>Seleccione una Opcion</option>
			@foreach (Cuenta accountFiltro in cuentas)
			{
				@if (accountFiltro is Ahorro)
				{
					<option value="@(((Ahorro)accountFiltro).Nombre)">@(((Ahorro)accountFiltro).Nombre) - @(((Ahorro)accountFiltro).Moneda) </option>
				} else
				{
					<option value="@(((Credito)accountFiltro).NumeroTarjeta)-@(((Credito)accountFiltro).BancoEmisor)"> @(((Credito)accountFiltro).NumeroTarjeta) - @(((Credito)accountFiltro).Moneda) - @(((Credito)accountFiltro).BancoEmisor)</option>
				}
			}
		</select>
	</div>

	<h1>@cuentaElegida</h1>

	<a style="position:relative; flex-grow:1; cursor:pointer; width:50%; left:23%; align-items:center; justify-content:center; display: flex; font-size: 25px" class="text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2" @onclick="generarLista">Generar Reporte</a>

	<div class="flex flex-col space-y-2">
		@if (listaGastos.Count == 0)
		{
			@if (primeraVez)
			{
				<div style="border: solid; border-color: #d4d4d4; width: 23%; border-radius:9px; position:relative; align-items:center; justify-content:center; left:37%">
					<h1 style="padding-left:6px">Ingrese los datos para filtrar la lista.</h1>
				</div>
			} else
			{
				<div style="border: solid; border-color: #d4d4d4; width: 32%; border-radius:9px; left:0%; position:relative; align-items:center; justify-content:center; left:32%">
					<h1 style="padding-left:6px">No hay transacciones que permitan esta operacion.</h1>
				</div>
			}
		} else
		{
			<table class="min-w-full divide-y divide-gray-200">
				<thead class="bg-gray-50">
					<tr>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Titulo Transaccion
						</th>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Moneda
						</th>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Monto Usado
						</th>
						<th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
							Valor Dolar
						</th>
					</tr>
				</thead>
				<tbody class="bg-white divide-y divide-gray-200">
					@foreach (var gasto in listaGastos)
					{
						if (gasto.Moneda.Equals(TipoCambiario.Dolar))
						{
							<tr>
								<td class="px-6 py-4 whitespace-nowrap">
									@gasto.Titulo
								</td>
								<td class="px-6 py-4 whitespace-nowrap">
									@gasto.Moneda
								</td>
								<td class="px-6 py-4 whitespace-nowrap">
									$@(gasto.Monto * gasto.EncontrarCambio(reporte.MiEspacio).Pesos)
								</td>
								<td class="px-6 py-4 whitespace-nowrap">
									@gasto.EncontrarCambio(reporte.MiEspacio).Pesos - U$D @gasto.Monto
								</td>
							</tr>
						} else
						{
							<tr>
								<td class="px-6 py-4 whitespace-nowrap">
									@gasto.Titulo
								</td>
								<td class="px-6 py-4 whitespace-nowrap">
									@gasto.Moneda
								</td>
								<td class="px-6 py-4 whitespace-nowrap">
									$@(gasto.Monto)
								</td>
								<td class="px-6 py-4 whitespace-nowrap">
									
								</td>
							</tr>
						}
					}
				</tbody>
			</table>
		}
	</div>
</div>

@code {
	[Parameter] public int Id { get; set; }
	[Parameter] public string Correo { get; set; }
	public string ErrorMsg { get; set; }
	public Espacio espacio { get; set; }
	public List<Transaccion> listaGastos { get; set; }
	public Categoria categoriaFiltro { get; set; }
	public DateTime fechaInicio { get; set; } = DateTime.Now;
	public DateTime fechaFin { get; set; } = DateTime.Now;
	public Cuenta cuentaFiltro { get; set; }
	bool primeraVez = true;
	public List<Categoria> categorias = new List<Categoria>();
	public List<Cuenta> cuentas = new List<Cuenta>();
	public Reporte reporte { get; set; }
	public string catElegida { get; set; }
	public string cuentaElegida { get; set; }
	public string[] arrayCuenta { get; set; }


	private void generarLista()
	{
		arrayCuenta = cuentaElegida.Split('-');
		if (arrayCuenta.Length == 1)
		{
			if (cuentaElegida != "" && catElegida != "")
			{
				categoriaFiltro = encontrarCategoria(catElegida, reporte.MiEspacio.Categorias);
				cuentaFiltro = encontrarCuentaAhorro(cuentaElegida, reporte.MiEspacio.Cuentas);
				listaGastos = reporte.ListadoGastos(categoriaFiltro, fechaInicio, fechaFin, cuentaFiltro);
			}
		} else
		{
			if (cuentaElegida != "" && catElegida != "")
			{
				string nroTarjeta = arrayCuenta[0];
				string banco = arrayCuenta[1];
				categoriaFiltro = encontrarCategoria(catElegida, reporte.MiEspacio.Categorias);
				cuentaFiltro = encontrarCuentaCredito(nroTarjeta, banco, reporte.MiEspacio.Cuentas);
				listaGastos = reporte.ListadoGastos(categoriaFiltro, fechaInicio, fechaFin, cuentaFiltro);
			}
		}

	}

	public Ahorro encontrarCuentaAhorro(string nombreCuenta, List<Cuenta> listaCuentas)
	{
		Ahorro cuentaRet = new Ahorro();
		foreach (Cuenta cuenta in listaCuentas)
		{
			if (cuenta is Ahorro)
			{
				if (((Ahorro)cuenta).Nombre == nombreCuenta)
				{
					cuentaRet = (Ahorro)cuenta;
				}
			}	
		}
		return cuentaRet;
	}

	public Credito encontrarCuentaCredito(string nroTarjeta, string bancoEmisario, List<Cuenta> listaCuentas)
	{
		Credito cuentaRet = new Credito();
		foreach (Cuenta cuenta in listaCuentas)
		{
			if (cuenta is Credito)
			{
				if ((((Credito)cuenta).NumeroTarjeta == nroTarjeta) && (((Credito)cuenta).BancoEmisor == bancoEmisario))
				{
					cuentaRet = (Credito)cuenta;
				}
			}
		}
		return cuentaRet;
	}

	public Categoria encontrarCategoria(string nombreCategoria, List<Categoria> listaCategorias)
	{
		Categoria categoriaRet = new Categoria();
		foreach (Categoria categoria in listaCategorias)
		{
			if (categoria.Nombre == nombreCategoria)
			{
				categoriaRet = categoria;
			}
		}
		return categoriaRet;
	}

	protected override void OnInitialized()
	{
		catElegida = "";
		cuentaElegida = "";
		espacio = EspacioLogic.FindEspacio(Persistencia.Id);
		reporte = new Reporte() { MiEspacio = espacio };
		categorias = reporte.MiEspacio.Categorias;
		cuentas = reporte.MiEspacio.Cuentas;
		listaGastos = new List<Transaccion>(); ;
	}
}
