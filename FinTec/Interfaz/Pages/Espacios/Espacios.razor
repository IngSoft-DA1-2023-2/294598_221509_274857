@page "/home/{Id:int}/{Correo}/Espacios"
@inject NavigationManager NavigationManager
@using BussinesLogic
@using Domain
@inject UsuarioLogic UsuarioLogic;
@inject EspacioLogic EspacioLogic;
@inject Persistencia Persistencia;

<PageTitle>FinTec Espacio</PageTitle>

<div class="alert alert-success" role="alert">
	<p> Se encuentra en el Espacio:</p>
	<h4 class="alert-heading">@EspacioLogic.FindEspacio(Persistencia.Id).Nombre</h4>
	<hr>
	<p class="mb-0"><strong>Admin:</strong>@EspacioLogic.FindEspacio(Persistencia.Id).Admin.Nombre @EspacioLogic.FindEspacio(Persistencia.Id).Admin.Apellido</p>
</div>
<BotonVerdeAgua></BotonVerdeAgua>
<a class="btn btn-success btn-sm" href="/home/@Persistencia.Id/@Persistencia.Correo/CrearEspacios">Crear Espacio</a>

@foreach (var espacio in espacios)
{
	<div class="card">
		<div class="card-body">
			<h5 class="card-title"><strong>Nombre</strong>@espacio.Nombre</h5>
			@if (espacio.Admin.Correo == Persistencia.Correo)
			{
				<p>Soy administrador</p>
			}
			<p class="card-text"><Strong>Admin:</Strong>@($"{espacio.Admin.Nombre} {espacio.Admin.Apellido}")</p>
			<button class="btn btn-primary" @onclick="() => ClickCambiarDeEspacio(espacio)">Cambiar de Espacio</button>
			@if (espacio.Admin.Correo == Persistencia.Correo)
			{
				<button class="btn btn-primary" @onclick="() => MostrarInput(espacio)">Cambiar Nombre</button>

				@if (mostrarInput && espacio.Equals(espacioClickeado))
				{
					<input type="text" @bind="inputNombre" />
					<button class="btn btn-primary" @onclick="() => CambiarNombre(espacio)">Guardar</button>
					<button class="btn btn-primary" @onclick="CambiarNombreCerrar">Cerrar</button>
					<p style="color:red">@ErrorMsg</p>
				}
			}
		</div>
	</div>
}


@code {
	[Parameter] public int Id { get; set; }
	[Parameter] public string Correo { get; set; }
	public List<Espacio>? espacios { get; set; }
	public Espacio? espacioClickeado { get; set; }
	public string? ErrorMsg { get; set; }
	private bool mostrarInput = false;
	private string inputNombre = string.Empty;

	protected override void OnInitialized()
	{
		espacios = EspacioLogic.EspaciosByCorreo(Correo);
	}

	public void ClickCambiarDeEspacio(Espacio espacio)
	{
		Persistencia.Id = espacio.Id;
		NavigationManager.NavigateTo($"/home/{Persistencia.Id}/{Persistencia.Correo}");
	}

	private void MostrarInput(Espacio espacio)
	{
		espacioClickeado = espacio;
		mostrarInput = !mostrarInput;
	}

	private void CambiarNombre(Espacio espacio)
	{
		try
		{
			espacio.Nombre = inputNombre;
			ErrorMsg = "";
			inputNombre = "";
			mostrarInput = false;
		}
		catch (DomainEspacioException e)
		{
			ErrorMsg = e.Message;
		}
	}

	private void CambiarNombreCerrar()
	{
		mostrarInput = false;
		espacioClickeado= null;
		inputNombre = "";
	}
}
