@page "/home/{Id:int}/{Correo}/CrearObjetivos"
@inject NavigationManager NavigationManager

@using BussinesLogic
@using Domain
@inject UsuarioLogic UsuarioLogic;
@inject EspacioLogic EspacioLogic;
@inject Persistencia Persistencia;

<PageTitle>FinTec Registro de Usuario</PageTitle>
<EspacioActual></EspacioActual>

<div class="form-group">
    <label for="tituloObjetivo">Nombre de la Categoría:</label>
    <input type="text" id="tituloObjetivo" class="form-control" @bind="tituloObjetivo" />
</div>

<div class="form-group">
    <label for="montoObjetivo">Monto máximo de gasto por mes:</label>
    <input type="number" id="montoObjetivo" class="form-control" @bind="montoObjetivo" />
</div>

<div class="form-group">
    <label>Aplicar objetivo a las categorías:</label>
    <select class="form-control" @onchange="UpdateCategoriasSeleccionadas" multiple>
        @foreach (var categoria in categorias)
        {
            <option value="@categoria.Nombre">@categoria.Nombre</option>
        }
    </select>
	    
</div>

<p style="color:red">@ErrorMsg</p>
<button class="btn btn-primary" @onclick="Crear">Crear</button>

@code {
    [Parameter] public int Id { get; set; }
    [Parameter] public string Correo { get; set; }
    private string ErrorMsg = "";
    private string tituloObjetivo;
    private double montoObjetivo;
    private List<string> categoriasSeleccionadas = new List<string>();
    private List<Categoria> categorias;
    private List<Categoria> categorias2 = new List<Categoria>();

    protected override void OnInitialized()
    {
        // Cargar la lista de categorías desde el espacio
        categorias = EspacioLogic.FindEspacio(Persistencia.Id).Categorias;

    }


    private void UpdateCategoriasSeleccionadas(ChangeEventArgs e)
    {
        var selectedValues = e.Value as IEnumerable<string>;
        categoriasSeleccionadas = selectedValues.ToList();
    }

    private void Crear()
    {
        try
        {
            categorias2.Clear();

            // Crear un nuevo objetivo con los valores ingresados
            foreach (var categoria in categoriasSeleccionadas)
            {
                categorias2.Add(categorias.FirstOrDefault(c => c.Nombre == categoria));
            }
            if (categorias2.Count == 0)
            {
                throw new DomainCategoriaException("Debe seleccionar al menos una categoría");
            }
                try
                {
                    Objetivo nuevoObjetivo = new Objetivo
                    {

                    Titulo = tituloObjetivo,
                    MontoMaximo = montoObjetivo,
                    Categorias = categorias2
                    };
                    // Agregar el objetivo al espacio actual
                    Espacio espacioActual = EspacioLogic.FindEspacio(Persistencia.Id);
                    espacioActual.AgregarObjetivo(nuevoObjetivo);

                    // Redireccionar a la página de Objetivos
                    string newHref = $"/home/{Id}/{Correo}/Objetivos";
                    NavigationManager.NavigateTo(newHref);
                }
                    catch(ArgumentException e)
                {
                    ErrorMsg = e.Message;
			    }
            
        }
        catch (DomainCategoriaException e)
        {
            ErrorMsg = e.Message;
        }
    }

}
