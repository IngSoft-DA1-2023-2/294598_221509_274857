@page "/home/{Id:int}/{Correo}/CrearObjetivos"
@inject NavigationManager NavigationManager

@using BussinesLogic
@using Domain
@inject UsuarioLogic UsuarioLogic;
@inject EspacioLogic EspacioLogic;
@inject Persistencia Persistencia;

<PageTitle>FinTec Crear Objetivo</PageTitle>
<TituloRosado Titulo="Crear Objetivo" Subtitulo="Cree un objetivo rellenando los datos y seleccione una o varias categorias usando Ctrl+Click."></TituloRosado>
<EspacioActual></EspacioActual>

<table>
	<tr>
		<td>
			<label for="tituloObjetivo">Nombre de objetivo:</label>
		</td>
		<td>
			<input type="text" id="tituloObjetivo" class="form-control" placeholder="Nombre" @bind="tituloObjetivo" />
		</td>
	</tr>
	<tr>
		<td>
			<label for="montoObjetivo">Monto máximo de gasto por mes:</label>
		</td>
		<td>
			<input type="number" id="montoObjetivo" class="form-control" placeholder="Monto" @bind="montoObjetivo" />
		</td>
	</tr>
	<tr>
		<td>
			<label>Seleccione categorías:</label>
		</td>
		<td>
			<select class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
			@onchange="UpdateCategoriasSeleccionadas" multiple>
				@foreach (var categoria in categorias)
				{
					<option value="@categoria.Nombre">@categoria.Nombre</option>
				}
			</select>
		</td>
	</tr>
</table>

<p style="color:red">@ErrorMsg</p>
<button class="text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"
@onclick="Crear">
	Crear
</button>

@code {
	[Parameter] public int Id { get; set; }
	[Parameter] public string Correo { get; set; }
	private string ErrorMsg = "";
	private string tituloObjetivo;
	private double montoObjetivo;
	private List<string> categoriasSeleccionadas = new List<string>();
	private List<Categoria> categorias;
	private List<Categoria> categorias2 = new List<Categoria>();

	protected override void OnInitialized()
	{
		// Cargar la lista de categorías desde el espacio
		categorias = EspacioLogic.FindEspacio(Persistencia.Id).Categorias;
	}

	private void UpdateCategoriasSeleccionadas(ChangeEventArgs e)
	{
		var selectedValues = e.Value as IEnumerable<string>;
		categoriasSeleccionadas = selectedValues.ToList();
	}

	private void Crear()
	{
			categorias2.Clear();
			// Crear un nuevo objetivo con los valores ingresados
			foreach (var categoria in categoriasSeleccionadas)
			{
				categorias2.Add(categorias.FirstOrDefault(c => c.Nombre == categoria));
			}

			try
			{
				Objetivo nuevoObjetivo = new Objetivo
					{

						Titulo = tituloObjetivo,
						MontoMaximo = montoObjetivo,
						Categorias = categorias2
					};
				// Agregar el objetivo al espacio actual
				Espacio espacioActual = EspacioLogic.FindEspacio(Persistencia.Id);
				espacioActual.AgregarObjetivo(nuevoObjetivo);

				// Redireccionar a la página de Objetivos
				string newHref = $"/home/{Id}/{Correo}/Objetivos";
				NavigationManager.NavigateTo(newHref);
			}
		catch (DomainEspacioException e)
			{
				ErrorMsg = e.Message;
			}
	}
}
