@inject NavigationManager NavigationManager
@using BussinesLogic;
@using Domain
@inject UsuarioLogic UsuarioLogic;
@inject EspacioLogic EspacioLogic;


<div class="top-row ps-3 navbar navbar-dark">
	<div class="container-fluid">
		<a class="navbar-brand" href="">FinTec</a>
		<button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
			<span class="navbar-toggler-icon"></span>
		</button>
	</div>
</div>


<div class="alert alert-success" role="alert">
	<h4 class="alert-heading">Well done!</h4>
	<p>Aww yeah, you successfully read this important alert message. This example text is going to run a bit longer so that you can see how spacing within an alert works with this kind of content.</p>
	<hr>
	<p class="mb-0">Whenever you need to, be sure to use margin utilities to keep things nice and tidy.</p>
</div>


<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
	<nav class="flex-column">
		<p>@idEspacio</p>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="oi oi-home" aria-hidden="true"></span> Cambiar Espacio
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="counter">
				<span class="oi oi-plus" aria-hidden="true"></span> Counter
			</NavLink>
		</div>
		<div class="nav-item px-3">
			<NavLink class="nav-link" href="fetchdata">
				<span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
			</NavLink>
		</div>
	</nav>
</div>

@code {
	// Demonstrates how a parent component can supply parameters
	private bool collapseNavMenu = true;

	private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}

	public string idEspacio { get; set; } = "";
	public string nombreDelUsuario { get; set; } = "";
	protected override void OnInitialized()
	{
		var uri = new Uri(NavigationManager.Uri);
		var segments = uri.Segments;

		try
		{
			if (segments.Length > 3)
			{
				// El valor del parámetro de ruta está en el tercer segmento de la URL
				idEspacio = segments[2];
			}
			int numero = int.Parse(idEspacio);
		}
		catch (FormatException)
		{
			Console.WriteLine("La cadena no es un número válido.");
		}


	}
}
