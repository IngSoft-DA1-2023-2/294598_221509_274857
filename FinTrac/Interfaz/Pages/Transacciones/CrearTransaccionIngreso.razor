@page "/home/{Id:int}/{Correo}/CrearTransaccionIngreso"
<PageTitle>FinTrac Transacción</PageTitle>
<TituloRosado Titulo="Crear Transacción de Ingreso" Subtitulo="Cree sus transacciones de ingreso."></TituloRosado>
<EspacioActual></EspacioActual>

<div class="mt-4">
	<h3 class="text-lg font-medium mb-2">Detalles de la Transacción</h3>
	<div class="flex flex-col space-y-2">
		<div>
			<label class="text-gray-600">Título de la Transacción</label>
			<input type="text" @bind="inputTitulo" class="border rounded-md px-2 py-1" />
		</div>
		<div>
			<label class="text-gray-600">Monto</label>
			<input type="number" step="0.01" @bind="inputMonto" class="border rounded-md px-2 py-1" />
		</div>
		<div>
		</div>
		<div>
			<label class="text-gray-600">Cuenta Monetaria</label>
			<select @bind="cuentaSeleccionada">

				@foreach (var cuenta in cuentas)
				{
					<option value=@cuenta>@cuenta</option>
				}
			</select>
		</div>
		<div>
			<label class="text-gray-600">Categoría de la Transacción</label>
			<select @onchange="SeleccionarCategoria" class=" border rounded-md px-2 py-1">
				<option value="">Seleccione una Opcion</option>
				@foreach (var categoria in categorias)
				{
					if (categoria.Tipo.Equals(TipoCategoria.Ingreso))
					{
						<option value="@categoria.Nombre">@categoria.Nombre</option>
					}
				}
			</select>
		</div>
		<p style="color:red">@ErrorMsg</p>
		<button class="bg-blue-500 text-white text-xs font-medium px-2 py-1 rounded-lg hover:bg-blue-600 focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800 mt-2"
		@onclick="() => CrearTransaccion()">
			Crear Transacción
		</button>
	</div>
</div>




@code {
	[Parameter] public int Id { get; set; }
	[Parameter] public string Correo { get; set; }
	private string ErrorMsg { get; set; } = "";
	private string inputTitulo { get; set; } = "";
	private double inputMonto { get; set; } = 0;
	private string inputCuenta { get; set; }
	private string inputCategoria { get; set; }
	private Espacio espacio = new Espacio();
	private List<Categoria> categorias = new List<Categoria>();
	private string categoria;
	private string cuenta;
	private Domain.TipoCambiario tipoMonedaSeleccionado;
	private List<Domain.TipoCambiario> monedas;
	ControladorTransaccion controlador;
	private List<string> cuentas;
	private string cuentaSeleccionada;

	private void SeleccionarCuenta(ChangeEventArgs e)
	{
		cuentaSeleccionada = e.ToString();
	}


	protected override void OnInitialized()
	{
		controlador = new ControladorTransaccion(UsuarioLogic, EspacioLogic);
		espacio = EspacioLogic.FindEspacio(Id);
		cuentas = controlador.DatosCuentasEspacio(Persistencia.Id);
		cuentaSeleccionada = cuentas.FirstOrDefault();
		categorias = espacio.Categorias;
	}

	private void SeleccionarCategoria(ChangeEventArgs e)
	{
		string selectedValue = e.Value.ToString();
		categoria = selectedValue;
	}

	private void CrearTransaccion()
	{

		TransaccionDTO transaccion = new TransaccionDTO()
			{
				Titulo = inputTitulo,
				Monto = inputMonto,
				CuentaMonetaria = cuentaSeleccionada,
				CategoriaTransaccion = categoria,

			};

		 ErrorMsg = controlador.CrearTransaccionIngreso(Persistencia.Id, transaccion);
	}
}