@page "/home/{Id:int}/{Correo}/AgregarTipoCambiario"

<PageTitle>FinTrac Agregar Tipo Cambiario</PageTitle>
<TituloRosado Titulo="Agregar Tipo Cambiario" Subtitulo="Agregué un tipo cambiario para el espacio recuerde que no se puede repetir la fecha del mismo."></TituloRosado>
<EspacioActual></EspacioActual>

<form>
	<table>
		<tr>
			<td><label class="text-gray-600">Moneda</label></td>
			<td>
				<select @onchange="SeleccionarMoneda" class="text-600">
					<option value="">Seleccione una Opcion</option>
					@foreach (var moneda in monedas.Where(m => m != Domain.TipoCambiario.PesosUruguayos))
					{
						<option value="@moneda">@moneda</option>
					}
				</select>
			</td>
		</tr>
		<tr>
			<td><label for="valorPesos">Valor en Pesos Uruguayos:</label></td>
			<td><input type="number" class="form-control" id="valorPesos" placeholder="Pesos Uruguayos" @bind="Pesos"></td>
		</tr>
		<tr>
			<td><label for="fecha">Fecha:</label></td>
			<td><input type="date" class="form-control" id="fecha" @bind="FechaDeCambio"></td>
		</tr>
	</table>
	<p style="color:red">@ErrorMsg</p>
	<button type="button" class="mb-5 mt-4 text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2"
	@onclick="AgregarCambio">
		Agregar Tipo Cambiario
	</button>
</form>

@code 
{
	[Parameter] public int Id { get; set; }
	[Parameter] public string Correo { get; set; }
	private string ErrorMsg { get; set; } = "";
	private string Moneda { get; set; } = "";
	private double Pesos { get; set; } = 0;
	private DateTime FechaDeCambio { get; set; } = DateTime.Now;
	private Domain.TipoCambiario tipoMonedaSeleccionado;
	private List<Domain.TipoCambiario> monedas;

	private Cambio nuevoCambio = new Cambio();

	protected override void OnInitialized()
	{
		monedas = Enum.GetValues(typeof(Domain.TipoCambiario)).Cast<Domain.TipoCambiario>().ToList();
	}

	private void SeleccionarMoneda(ChangeEventArgs e)
	{
		tipoMonedaSeleccionado = (Domain.TipoCambiario)Enum.Parse(typeof(Domain.TipoCambiario), e.Value.ToString());
	}

	private void AgregarCambio()
	{
		try
		{
			var espacio = EspacioLogic.FindEspacio(Persistencia.Id);
			Cambio cambio = new Cambio()
				{
					Moneda = tipoMonedaSeleccionado,
					Pesos = Pesos,
					FechaDeCambio = FechaDeCambio.Date
				};
			try
			{
				espacio.AgregarCambio(cambio);
				EspacioLogic.UpdateEspacio(espacio);
				NavigationManager.NavigateTo($"/home/{Id}/{Correo}/TipoCambiario");
			}
			catch (DomainEspacioException ex)
			{
				ErrorMsg = ex.Message;
			}
		}
		catch (DomainEspacioException ex)
		{
			ErrorMsg = ex.Message;
		}
	}
}