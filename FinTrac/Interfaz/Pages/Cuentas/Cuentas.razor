@page "/home/{Id:int}/{Correo}/Cuentas"

<div style="left: 3%; position: relative; width: 95%">
	<PageTitle>FinTrac Cuentas</PageTitle>
	<TituloRosado Titulo="Cuentas del espacio actual." Subtitulo="Cree elimine y modifique las cuentas del espacio."></TituloRosado>
	<EspacioActual></EspacioActual>
</div>

<div style="left: 3%; position: relative" class="mb-4">
	<a class="mb-5 mt-4 text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2"
	   href="/home/@Persistencia.Id/@Persistencia.Correo/CrearCuentaAhorro">
		Crear Cuenta Ahorro
	</a>

	<a class="mb-5 mt-4 text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2"
	   href="/home/@Persistencia.Id/@Persistencia.Correo/CrearCuentaCredito">Crear Cuenta Credito</a>
</div>

<p style="color:red">@ErrorMsgEliminar</p>

<h2 style="left: 3%; position: relative">Cuentas de Ahorro:</h2>
<div class="relative overflow-x-auto shadow-md sm:rounded-lg mt-5" style="width: 95%; left: 3%">
	<table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
		<thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
			<tr>
				<th scope="col" class="px-6 py-3">
					Nombre
				</th>
				<th scope="col" class="px-6 py-3">
					Monto
				</th>
				<th scope="col" class="px-6 py-3">
					Fecha de Creación
				</th>
				<th scope="col" class="px-6 py-3">
					Moneda
				</th>
				<th scope="col" class="px-6 py-3">
					Acciones
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (AhorroDTO cuentaAhorro in ahorros)
			{
				<tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
					<td class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
						@cuentaAhorro.Nombre
					</td>
					<td class="px-6 py-4">
						@cuentaAhorro.Monto
					</td>
					<td class="px-6 py-4">
						@cuentaAhorro.FechaCreacion
					</td>
					<td class="px-6 py-4">
						@cuentaAhorro.Moneda
					</td>
					<td class="px-6 py-4">
						<button class="bg-blue-500 text-white text-xs font-medium px-2 py-1 rounded-lg hover:bg-blue-600 focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800 ml-2"
						@onclick="() =>	MostrarModificarCuenta(cuentaAhorro)">
							Modificar
						</button>
						<button class="bg-red-500 text-white text-xs font-medium px-2 py-1 rounded-lg hover:bg-red-600 focus:ring-4 focus:outline-none focus:ring-red-200 dark:focus:ring-red-800 ml-2"
						@onclick="() => EliminarCuentaAhorro(cuentaAhorro)">
							Eliminar
						</button>
					</td>
				</tr>
				<tr>
					@if (mostrarModificar && cuentaClickeada.Equals(cuentaAhorro))
					{
						<p style="color:red">@ErrorMsg</p>
						<input type="text" @bind="inputAhorro" class="border rounded-md px-2 py-1" />
						<button class="bg-blue-500 text-white text-xs font-medium px-2 py-1 rounded-lg hover:bg-blue-600 focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800 ml-2"
						@onclick="() =>	ModificarCuentaAhorro(cuentaAhorro)">
							Modificar
						</button>
					}
				</tr>
			}
		</tbody>
	</table>
</div>
<h2 style="left: 3%; position: relative" class="mt-5">Cuentas de Crédito:</h2>
<div class="relative overflow-x-auto shadow-md sm:rounded-lg mt-5" style="width: 95%; left: 3%">
	<table class="w-full text-sm text-left text-gray-500 dark:text-gray-400">
		<thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
			<tr>
				<th scope="col" class="px-6 py-3">
					Banco Emisor
				</th>
				<th scope="col" class="px-6 py-3">
					Número de Tarjeta
				</th>
				<th scope="col" class="px-6 py-3">
					Crédito
				</th>
				<th scope="col" class="px-6 py-3">
					Moneda
				</th>
				<th scope="col" class="px-6 py-3">
					Fecha de Creación
				</th>
				<th scope="col" class="px-6 py-3">
					Fecha de Cierre
				</th>
				<th scope="col" class="px-6 py-3">
					Acciones
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (CreditoDTO cuentaCredito in creditos)
			{
				<tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600">
					<td class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
						@cuentaCredito.BancoEmisor
					</td>
					<td class="px-6 py-4">
						@cuentaCredito.NumeroTarjeta
					</td>
					<td class="px-6 py-4">
						@cuentaCredito.CreditoDisponible
					</td>
					<td class="px-6 py-4">
						@cuentaCredito.Moneda
					</td>
					<td class="px-6 py-4">
						@cuentaCredito.FechaCreacion
					</td>
					<td class="px-6 py-4">
						@cuentaCredito.FechaCierre
					</td>
					<td class="px-6 py-4">
						<button class="bg-blue-500 text-white text-xs font-medium px-2 py-1 rounded-lg hover:bg-blue-600 focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800 ml-2"
						@onclick="() => MostrarModificarCuenta(cuentaCredito)">
							Modificar
						</button>
						<button class="bg-red-500 text-white text-xs font-medium px-2 py-1 rounded-lg hover:bg-red-600 focus:ring-4 focus:outline-none focus:ring-red-200 dark:focus:ring-red-800 ml-2"
						@onclick="() => EliminarCuentaCredito(cuentaCredito)">
							Eliminar
						</button>
					</td>
				</tr>
				<tr>
					@if (mostrarModificar && cuentaClickeada.Equals(cuentaCredito))
					{
						<div class="mt-4">
							<h3 class="text-lg font-medium mb-2">Modificar Cuenta de Crédito</h3>
							<div class="flex flex-col space-y-2">
								<div>
									<label class="text-gray-600">Nombre del Banco</label>
									<input type="text" @bind="inputNombreBanco" class="border rounded-md px-2 py-1" />
								</div>
								<div>
									<label class="text-gray-600">Número de Tarjeta</label>
									<input type="text" @bind="inputNumTarjeta" class="border rounded-md px-2 py-1" />
								</div>
								<p style="color:red">@ErrorMsgBancoTarjeta</p>
								<button class="bg-blue-500 text-white text-xs font-medium px-2 py-1 rounded-lg hover:bg-blue-600 focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800 mt-2"
								@onclick="() => ModificarCuentaBancoTarjeta(cuentaCredito)">
									Guardar Cambios (Banco y Tarjeta)
								</button>
							</div>
						</div>
						<div class="mt-4">
							<div>
								<label class="text-gray-600">Fecha de Cierre</label>
								<input type="date" @bind="inputFechaCierre" class="border rounded-md px-2 py-1" />
							</div>
							<p style="color:red">@ErrorMsgFecha</p>
							<button class="bg-blue-500 text-white text-xs font-medium px-2 py-1 rounded-lg hover:bg-blue-600 focus:ring-4 focus:outline-none focus:ring-blue-200 dark:focus:ring-blue-800 mt-2"
							@onclick="() => ModificarCuentaFecha(cuentaCredito)">
								Guardar Cambios (Fecha de Cierre)
							</button>
						</div>
					}
				</tr>
			}
		</tbody>
	</table>
</div>
<div style="height:500px"></div>

@code {
	[Parameter] public int Id { get; set; }
	[Parameter] public string Correo { get; set; }
	private string ErrorMsgEliminar { get; set; } = "";
	private string ErrorMsg { get; set; }
	private string ErrorMsgFecha { get; set; }
	private string ErrorMsgBancoTarjeta { get; set; }
	private CuentaDTO cuentaClickeada { get; set; }
	private bool mostrarModificar { get; set; } = false;
	private string inputAhorro { get; set; } = "";
	private string inputNumTarjeta { get; set; } = "";
	private string inputNombreBanco { get; set; } = "";
	private DateTime inputFechaCierre { get; set; } = DateTime.Today;
	private ControladorCuenta controlador;
	private List<AhorroDTO> ahorros;
	private List<CreditoDTO> creditos;

	protected override void OnInitialized()
	{
		controlador = new ControladorCuenta(UsuarioLogic, EspacioLogic);
		ahorros = controlador.AhorrosDeEspacio(Persistencia.Id);
		creditos = controlador.CreditosDeEspacio(Persistencia.Id);
	}

	private void LimpiarImputs()
	{
		inputAhorro = "";
		ErrorMsg = "";
		ErrorMsgEliminar = "";
		ErrorMsgBancoTarjeta = "";
		ErrorMsgFecha = "";
		inputNumTarjeta = "";
		inputNombreBanco = "";
		inputFechaCierre = DateTime.Today;
	}

	private void MostrarModificarCuenta(CuentaDTO cuenta)
	{
		mostrarModificar = !mostrarModificar;
		cuentaClickeada = cuenta;
		LimpiarImputs();
	}

	private void ModificarCuentaBancoTarjeta(CreditoDTO cuenta)
	{
		CreditoDTO credito = new CreditoDTO()
			{
				Id = cuenta.Id,
				BancoEmisor = inputNombreBanco,
				CreditoDisponible = cuenta.CreditoDisponible,
				FechaCreacion = cuenta.FechaCreacion,
				Moneda = cuenta.Moneda,
				NumeroTarjeta = inputNumTarjeta,
				FechaCierre = cuenta.FechaCierre
			};
		ErrorMsgBancoTarjeta = controlador.ModificarCredito(Persistencia.Id, credito);
		if (ErrorMsgBancoTarjeta.Equals(""))
		{
			mostrarModificar = false;
			creditos = controlador.CreditosDeEspacio(Persistencia.Id);
		}

	}

	private void ModificarCuentaFecha(CreditoDTO cuenta)
	{
		CreditoDTO credito = new CreditoDTO()
			{
				Id = cuenta.Id,
				BancoEmisor = cuenta.BancoEmisor,
				CreditoDisponible = cuenta.CreditoDisponible,
				FechaCreacion = cuenta.FechaCreacion,
				Moneda = cuenta.Moneda,
				NumeroTarjeta = cuenta.NumeroTarjeta,
				FechaCierre = inputFechaCierre
			};
		ErrorMsgFecha = controlador.ModificarCredito(Persistencia.Id, credito);	
		if (ErrorMsgFecha.Equals(""))
		{
			mostrarModificar = false;
			creditos = controlador.CreditosDeEspacio(Persistencia.Id);
		}
	}

	private void ModificarCuentaAhorro(AhorroDTO cuenta)
	{
		AhorroDTO ahorro = new AhorroDTO()
			{
				Id = cuenta.Id,
				Nombre = inputAhorro,
				Monto = cuenta.Monto,
				FechaCreacion = cuenta.FechaCreacion,
				Moneda = cuenta.Moneda
			};
		ErrorMsg = controlador.ModificarAhorro(Persistencia.Id, ahorro);
		if(ErrorMsg.Equals(""))
		{
			mostrarModificar = false;
			ahorros = controlador.AhorrosDeEspacio(Persistencia.Id);
		};
	}

	private void EliminarCuentaAhorro(AhorroDTO cuenta)
	{
		ErrorMsgEliminar = controlador.EliminarAhorro(Persistencia.Id, cuenta);
		if (ErrorMsgEliminar.Equals(""))
		{
			ahorros = controlador.AhorrosDeEspacio(Persistencia.Id);
		}
	}

	private void EliminarCuentaCredito(CreditoDTO cuenta)
	{
		ErrorMsgEliminar = controlador.EliminarCredito(Persistencia.Id, cuenta);
		if (ErrorMsgEliminar.Equals(""))
		{
			creditos = controlador.CreditosDeEspacio(Persistencia.Id);
		}
	}
}