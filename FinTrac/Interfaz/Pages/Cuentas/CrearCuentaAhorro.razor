@page "/home/{Id:int}/{Correo}/CrearCuentaAhorro"
@inject ControladorCuenta controlador;
<PageTitle>FinTrac Crear Cuenta Ahorro</PageTitle>
<TituloRosado Titulo="Crear cuenta de Ahorro" Subtitulo="Cree la cuenta de ahorro para el espacio seleccionado, debe tener saldo inicial mayor a 0 y nombre no vacío"></TituloRosado>
<EspacioActual></EspacioActual>

<form>
	<table>
		<tr>
			<td><label for="nombre">Nombre de la cuenta:</label></td>
			<td><input type="text" class="form-control" id="nombre" placeholder="Nombre" @bind="Nombre"></td>
		</tr>
		<tr>
			<td><label for="monto">Saldo inicial:</label></td>
			<td><input type="number" class="form-control" id="monto" placeholder="Monto" @bind="Monto"></td>
		</tr>
		<tr>
			<td><label for="moneda">Moneda:</label></td>
			<td>
				<select @onchange="SeleccionarMoneda" class="text-600">
					@foreach (var moneda in monedas)
					{
						<option value="@moneda">@moneda</option>
					}
				</select>
			</td>
		</tr>
	</table>
	<button type="button" class="text-white bg-gradient-to-br from-pink-500 to-orange-400 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-pink-200 dark:focus:ring-pink-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center mr-2 mb-2"
	@onclick="CrearCuenta">
		Crear Cuenta de Ahorro
	</button>
</form>

<p style="color:red">@ErrorMsg</p>

@code {
	[Parameter] public int Id { get; set; }
	[Parameter] public string Correo { get; set; }
	private string ErrorMsg { get; set; }
	private string Nombre { get; set; } = "";
	private double Monto { get; set; } = 0;
	private TipoCambiarioDTO tipoMonedaSeleccionado;
	private List<TipoCambiarioDTO> monedas;

	protected override void OnInitialized()
	{
		monedas = Enum.GetValues(typeof(TipoCambiarioDTO)).Cast<TipoCambiarioDTO>().ToList();
	}

	private void SeleccionarMoneda(ChangeEventArgs e)
	{
		tipoMonedaSeleccionado = (TipoCambiarioDTO)Enum.Parse(typeof(TipoCambiarioDTO), e.Value.ToString());
	}

	private void CrearCuenta()
	{
		AhorroDTO ahorro = new AhorroDTO()
			{
				Nombre = Nombre,
				Saldo = Monto,
				Moneda = tipoMonedaSeleccionado
			};
		ErrorMsg = controlador.CrearAhorro(Persistencia.Id, ahorro);
		if (ErrorMsg == "")
		{
			NavigationManager.NavigateTo($"/home/{Id}/{Correo}/Cuentas");
		}
	}
}